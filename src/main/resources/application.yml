
spring:
  # jpa:
  #   show-sql: true
  #   properties:
  #     hibernate:
  #       format_sql: true
  main:
    web-application-type: none
  application:
    name: ${APP_NAME}
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: jdbc:${DB_CONNECTION}://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
  liquibase:
    change-log: classpath:/db/changelog/master.xml
  kafka:
    admin:
      auto-create: true
    bootstrap-servers: kafka:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: default
      properties:
        spring.json.trusted.packages: "henrotaym.env.*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_ID_KEY}
            client-secret: ${GITHUB_SECRET_KEY}
            scope: profile, email
            redirect-uri: "http://localhost:48080/api/login/oauth2/code/github"
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
# logging:
#   level:
#     org.hibernate.orm.jdbc.bind: TRACE
#     org.springframework.data.jpa: DEBUG